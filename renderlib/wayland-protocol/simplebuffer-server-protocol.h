/* Generated by wayland-scanner 1.17.0 */

#ifndef WL_SB_SERVER_PROTOCOL_H
#define WL_SB_SERVER_PROTOCOL_H

#include <stdint.h>
#include <stddef.h>
#include "wayland-server.h"

#ifdef  __cplusplus
extern "C" {
#endif

struct wl_client;
struct wl_resource;

/**
 * @page page_wl_sb The wl_sb protocol
 * @section page_ifaces_wl_sb Interfaces
 * - @subpage page_iface_wl_sb - cross process buffer id wrapper
 * @section page_copyright_wl_sb Copyright
 * <pre>
 *
 * If not stated otherwise in this file or this component's Licenses.txt file the
 * following copyright and licenses apply:
 *
 * Copyright 2016 RDK Management
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * -------
 * Copyright © 2008-2011 Kristian Høgsberg
 * Copyright © 2010-2011 Intel Corporation
 * Permission to use, copy, modify, distribute, and sell this
 * software and its documentation for any purpose is hereby granted
 * without fee, provided that\n the above copyright notice appear in
 * all copies and that both that copyright notice and this permission
 * notice appear in supporting documentation, and that the name of
 * the copyright holders not be used in advertising or publicity
 * pertaining to distribution of the software without specific,
 * written prior permission.  The copyright holders make no
 * representations about the suitability of this software for any
 * purpose.  It is provided "as is" without express or implied
 * warranty.
 * THE COPYRIGHT HOLDERS DISCLAIM ALL WARRANTIES WITH REGARD TO THIS
 * SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND
 * FITNESS, IN NO EVENT SHALL THE COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN
 * AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
 * ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF
 * THIS SOFTWARE.
 * </pre>
 */
struct wl_buffer;
struct wl_sb;

/**
 * @page page_iface_wl_sb wl_sb
 * @section page_iface_wl_sb_desc Description
 *
 * The simple buffer protocol provides a mechanism for encapsulating buffer identifers
 * that are valid across process boundaries and sharing them between client
 * and server processes.
 * @section page_iface_wl_sb_api API
 * See @ref iface_wl_sb.
 */
/**
 * @defgroup iface_wl_sb The wl_sb interface
 *
 * The simple buffer protocol provides a mechanism for encapsulating buffer identifers
 * that are valid across process boundaries and sharing them between client
 * and server processes.
 */
extern const struct wl_interface wl_sb_interface;

#ifndef WL_SB_ERROR_ENUM
#define WL_SB_ERROR_ENUM
enum wl_sb_error {
	WL_SB_ERROR_INVALID_FORMAT = 1,
	WL_SB_ERROR_INVALID_NATIVE_HANDLE = 2,
};
#endif /* WL_SB_ERROR_ENUM */

#ifndef WL_SB_FORMAT_ENUM
#define WL_SB_FORMAT_ENUM
enum wl_sb_format {
	WL_SB_FORMAT_C8 = 0x20203843,
	WL_SB_FORMAT_RGB332 = 0x38424752,
	WL_SB_FORMAT_BGR233 = 0x38524742,
	WL_SB_FORMAT_XRGB4444 = 0x32315258,
	WL_SB_FORMAT_XBGR4444 = 0x32314258,
	WL_SB_FORMAT_RGBX4444 = 0x32315852,
	WL_SB_FORMAT_BGRX4444 = 0x32315842,
	WL_SB_FORMAT_ARGB4444 = 0x32315241,
	WL_SB_FORMAT_ABGR4444 = 0x32314241,
	WL_SB_FORMAT_RGBA4444 = 0x32314152,
	WL_SB_FORMAT_BGRA4444 = 0x32314142,
	WL_SB_FORMAT_XRGB1555 = 0x35315258,
	WL_SB_FORMAT_XBGR1555 = 0x35314258,
	WL_SB_FORMAT_RGBX5551 = 0x35315852,
	WL_SB_FORMAT_BGRX5551 = 0x35315842,
	WL_SB_FORMAT_ARGB1555 = 0x35315241,
	WL_SB_FORMAT_ABGR1555 = 0x35314241,
	WL_SB_FORMAT_RGBA5551 = 0x35314152,
	WL_SB_FORMAT_BGRA5551 = 0x35314142,
	WL_SB_FORMAT_RGB565 = 0x36314752,
	WL_SB_FORMAT_BGR565 = 0x36314742,
	WL_SB_FORMAT_RGB888 = 0x34324752,
	WL_SB_FORMAT_BGR888 = 0x34324742,
	WL_SB_FORMAT_XRGB8888 = 0x34325258,
	WL_SB_FORMAT_XBGR8888 = 0x34324258,
	WL_SB_FORMAT_RGBX8888 = 0x34325852,
	WL_SB_FORMAT_BGRX8888 = 0x34325842,
	WL_SB_FORMAT_ARGB8888 = 0x34325241,
	WL_SB_FORMAT_ABGR8888 = 0x34324241,
	WL_SB_FORMAT_RGBA8888 = 0x34324152,
	WL_SB_FORMAT_BGRA8888 = 0x34324142,
	WL_SB_FORMAT_XRGB2101010 = 0x30335258,
	WL_SB_FORMAT_XBGR2101010 = 0x30334258,
	WL_SB_FORMAT_RGBX1010102 = 0x30335852,
	WL_SB_FORMAT_BGRX1010102 = 0x30335842,
	WL_SB_FORMAT_ARGB2101010 = 0x30335241,
	WL_SB_FORMAT_ABGR2101010 = 0x30334241,
	WL_SB_FORMAT_RGBA1010102 = 0x30334152,
	WL_SB_FORMAT_BGRA1010102 = 0x30334142,
	WL_SB_FORMAT_YUYV = 0x56595559,
	WL_SB_FORMAT_YVYU = 0x55595659,
	WL_SB_FORMAT_UYVY = 0x59565955,
	WL_SB_FORMAT_VYUY = 0x59555956,
	WL_SB_FORMAT_AYUV = 0x56555941,
	WL_SB_FORMAT_NV12 = 0x3231564e,
	WL_SB_FORMAT_NV21 = 0x3132564e,
	WL_SB_FORMAT_NV16 = 0x3631564e,
	WL_SB_FORMAT_NV61 = 0x3136564e,
	WL_SB_FORMAT_YUV410 = 0x39565559,
	WL_SB_FORMAT_YVU410 = 0x39555659,
	WL_SB_FORMAT_YUV411 = 0x31315559,
	WL_SB_FORMAT_YVU411 = 0x31315659,
	WL_SB_FORMAT_YUV420 = 0x32315559,
	WL_SB_FORMAT_YVU420 = 0x32315659,
	WL_SB_FORMAT_YUV422 = 0x36315559,
	WL_SB_FORMAT_YVU422 = 0x36315659,
	WL_SB_FORMAT_YUV444 = 0x34325559,
	WL_SB_FORMAT_YVU444 = 0x34325659,
};
#endif /* WL_SB_FORMAT_ENUM */

/**
 * @ingroup iface_wl_sb
 * @struct wl_sb_interface
 */
struct wl_sb_interface {
	/**
	 */
	void (*create_buffer)(struct wl_client *client,
			      struct wl_resource *resource,
			      uint32_t id,
			      uint32_t native_handle,
			      int32_t width,
			      int32_t height,
			      uint32_t stride,
			      uint32_t format);
	/**
	 */
	void (*create_planar_buffer)(struct wl_client *client,
				     struct wl_resource *resource,
				     uint32_t id,
				     uint32_t native_handle,
				     int32_t width,
				     int32_t height,
				     uint32_t format,
				     int32_t offset0,
				     int32_t stride0,
				     int32_t offset1,
				     int32_t stride1,
				     int32_t offset2,
				     int32_t stride2);
	/**
	 * @since 2
	 */
	void (*create_planar_buffer_fd)(struct wl_client *client,
					struct wl_resource *resource,
					uint32_t id,
					int32_t fd,
					int32_t width,
					int32_t height,
					uint32_t format,
					int32_t offset0,
					int32_t stride0,
					int32_t offset1,
					int32_t stride1,
					int32_t offset2,
					int32_t stride2);
	/**
	 * @since 3
	 */
	void (*create_planar_buffer_fd2)(struct wl_client *client,
					 struct wl_resource *resource,
					 uint32_t id,
					 int32_t fd0,
					 int32_t fd1,
					 int32_t fd2,
					 int32_t width,
					 int32_t height,
					 uint32_t format,
					 int32_t offset0,
					 int32_t stride0,
					 int32_t offset1,
					 int32_t stride1,
					 int32_t offset2,
					 int32_t stride2);
};

#define WL_SB_FORMAT 0

/**
 * @ingroup iface_wl_sb
 */
#define WL_SB_FORMAT_SINCE_VERSION 1

/**
 * @ingroup iface_wl_sb
 */
#define WL_SB_CREATE_BUFFER_SINCE_VERSION 1
/**
 * @ingroup iface_wl_sb
 */
#define WL_SB_CREATE_PLANAR_BUFFER_SINCE_VERSION 1
/**
 * @ingroup iface_wl_sb
 */
#define WL_SB_CREATE_PLANAR_BUFFER_FD_SINCE_VERSION 2
/**
 * @ingroup iface_wl_sb
 */
#define WL_SB_CREATE_PLANAR_BUFFER_FD2_SINCE_VERSION 3

/**
 * @ingroup iface_wl_sb
 * Sends an format event to the client owning the resource.
 * @param resource_ The client's resource
 */
static inline void
wl_sb_send_format(struct wl_resource *resource_, uint32_t format)
{
	wl_resource_post_event(resource_, WL_SB_FORMAT, format);
}

#ifdef  __cplusplus
}
#endif

#endif
